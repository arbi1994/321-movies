@use "./breakpoints" as *;
@use "./colors" as *;
@use "./variables" as *;

@mixin flex($direction, $content, $align) {
  display: flex;
  flex-direction: $direction;
  justify-content: $content;
  align-items: $align;
}

@mixin grid($num) {
  display: grid;
  grid-template-columns: 0.5em repeat($num, minmax(auto, 1fr)) 0.5em;
  grid-template-rows: 1em auto 1em;
}

@mixin clamp(
  $property,
  $min-size,
  $scaler,
  $max-size,
  $min-size-left: false,
  $scaler-left: false,
  $max-size-left: false
) {
  @if $min-size-left == false {
    // Set MAX values
    #{$property}: $max-size;
    #{$property}: #{“min(max(#{$min-size}, #{$scaler}), #{$max-size}) ”};
    #{$property}: clamp(#{$min-size}, #{$scaler}, #{$max-size});
  } @else if $min-size-left == 0 or $min-size-left == auto {
    // Set MAX values
    #{$property}: $max-size $max-size-left;
    #{$property}: #{“min(max(#{$min-size}, #{$scaler}), #{$max-size})
      ”}
      $min-size-left;
    #{$property}: clamp(#{$min-size}, #{$scaler}, #{$max-size}) $min-size-left;
  } @else {
    // Set MAX values
    #{$property}: $max-size $max-size-left;
    #{$property}: #{“min(max(#{$min-size}, #{$scaler}), #{$max-size})
      ”}
      #{“min(max(#{$min-size-left}, #{$scaler-left}), #{$max-size-left})
      ”};
    // add second CLAMP and #{} to SASS variables
    #{$property}: clamp(#{$min-size}, #{$scaler}, #{$max-size})
      clamp(#{$min-size-left}, #{$scaler-left}, #{$max-size-left});
  }
}

@mixin hover-supported {
  @media not all and (pointer: coarse) {
    &:hover {
      @content;
    }
  }
}

@mixin gradientColor() {
  background: linear-gradient($deg1, $search-1, $search-2);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  -moz-background-clip: text;
  -moz-text-fill-color: transparent;
}
